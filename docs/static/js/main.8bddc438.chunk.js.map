{"version":3,"sources":["app/components/addCategory/AddCategory.tsx","app/helpers/GetGifs.tsx","app/components/gifGridItem/GifGridItem.tsx","app/components/gifGrid/GifGrid.tsx","app/hooks/useFetchGifs.tsx","app/components/GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAO,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAEbC,EAFa,+CAFR,2CAEQ,cAE6CC,UAAUH,GAFvD,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKAA,EAAKC,OALL,cAKbC,EALa,yBAOZA,EAAKA,KAAKC,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SAXvB,2CAAH,sDCQLY,EAVK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEzB,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAd,GACnBY,EAAS,CAACd,KAAME,EAAKU,SAAS,SAEnC,CAACnB,IAEGoB,EDVyBI,CAAaxB,GAAhCY,EAAb,EAAOL,KAAcY,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDf,IACjDmB,GAAW,wCACb,qBAAKJ,UAAU,6CAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEV/Ce,EAAe,WAExB,MAAkCvC,mBAAS,CAAC,WAA5C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAEA,OACI,qCACI,oBAAI8B,UAAU,mCAAd,4BAEA,cAAC,EAAD,CAAa9B,YAAaA,IAC1B,uBAEA,6BAEQyC,EAAWlB,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCZ7D2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8bddc438.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nconst apiKey = 'api_key=tKeXt01m8WOYSAj09jrPwWJATuToqOO8';\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?${apiKey}&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n\r\n    const data = await resp.json();\r\n\r\n    return data.data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport {useFetchGifs} from \"../../hooks/useFetchGifs\";\r\nimport GifGridItem from \"../gifGridItem/GifGridItem\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p>Loading</p> }\r\n            <div className=\"card-grid animate__animated animate__flash\">\r\n                {\r\n                    images.map(img => <GifGridItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {\r\n            setState({data: img, loading: false});\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {AddCategory} from \"./addCategory/AddCategory\";\r\nimport {GifGrid} from \"./gifGrid/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategory] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__pulse\">Gif expert app</h2>\r\n\r\n            <AddCategory setCategory={setCategory} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => <GifGrid key={category} category={category} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./app/components/GifExpertApp\";\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}